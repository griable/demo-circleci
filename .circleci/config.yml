executors:
  node:
    docker:
      - image: circleci/node:erbium

aliases:
  restore_cache: &restore_cache
    restore_cache:
      name: Restore Npm Package Cache
      keys:
        - v{{ .Environment.versionCache }}-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}-{{ checksum ".circleci/config.yml" }}

  install_node_modules: &install_node_modules
    run:
      name: Install NPM dependencies
      command: npm install

  save_cache: &save_cache
    save_cache:
      name: Save NPM package cache
      key: v{{ .Environment.versionCache }}-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}-{{ checksum ".circleci/config.yml" }}
      paths:
        - ./node_modules

version: 2.1

orbs:
  lighthouse-check: foo-software/lighthouse-check@0.0.13

jobs:
  install:
    executor: node
    steps:
      - checkout
      - <<: *restore_cache
      - <<: *install_node_modules
      - <<: *save_cache
  build_and_lint:
    executor: node
    steps:
      - checkout
      - <<: *restore_cache
      - <<: *install_node_modules
      - run:
          name: Build Public
          command: npm run generate
      - persist_to_workspace:
          root: ./
          paths:
            - dist
  zip_and_store:
    executor: node
    steps:
      - attach_workspace:
          at: ./
      - <<: *restore_cache
      - <<: *install_node_modules
      - run:
          name: Compress Artifacts
          command: zip -r myartifact.zip dist
      - store_artifacts:
          path: myartifact.zip
          destination: artifact_name
  deploy:
    executor: node
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - <<: *restore_cache
      - <<: *install_node_modules
      - run:
          name: install netlify cli
          command: sudo npm install -g --unsafe-perm --silent netlify-cli
      - run:
          name: deploy site to netlify
          command: |
            netlify deploy | awk '/Website Draft URL: /{print $0}' | sed  's/.* \(.*\)/\1/' > ./echo-output
      - run:
          name: Debugtest
          command: cat ./echo-output
      - persist_to_workspace:
          root: ./
          paths:
            - echo-output
  # run_ligthouse:
  #   executor: lighthouse-check/default
  #   steps:
  #     - attach_workspace:
  #         at: ./
  #     - run:
  #         name: Write variable
  #         command: echo 'export MY_ENV_VAR="$(cat ./echo-output)"' >> $BASH_ENV
  #     - run:
  #         name: "Did it work?"
  #         command: echo $MY_ENV_VAR
  #     - lighthouse-check/audit:
  #         urls: $MY_ENV_VAR

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - install
      - build_and_lint:
          requires:
            - install
      - deploy:
          context: NuxtNetlify
          requires:
            - build_and_lint
      # - run_ligthouse:
      #     requires:
      #         - deploy
      - zip_and_store:
          requires:
              - build_and_lint
