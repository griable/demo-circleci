executors:
  node:
    docker:
      - image: circleci/node:erbium

aliases:
  restore_cache: &restore_cache
    restore_cache:
      name: Restore Npm Package Cache
      keys:
        - v{{ .Environment.versionCache }}-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}-{{ checksum ".circleci/config.yml" }}

  install_node_modules: &install_node_modules
    run:
      name: Install NPM dependencies
      command: npm install

  save_cache: &save_cache
    save_cache:
      name: Save NPM package cache
      key: v{{ .Environment.versionCache }}-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}-{{ checksum ".circleci/config.yml" }}
      paths:
        - ./node_modules

version: 2.1

orbs:
  lighthouse-check: foo-software/lighthouse-check@0.0.13
  pa11yci: nebulab/pa11yci@1.0.0

jobs:
  install:
    executor: node
    steps:
      - checkout
      - <<: *restore_cache
      - <<: *install_node_modules
      - <<: *save_cache
  build_and_lint:
    executor: node
    steps:
      - checkout
      - <<: *restore_cache
      - <<: *install_node_modules
      - run:
          name: Build Public
          command: npm run generate
      - persist_to_workspace:
          root: ./
          paths:
            - dist
  bump_version:
    executor: node
    steps:
      - checkout
      - <<: *restore_cache
      - <<: *install_node_modules
      # - run:
      #     name: Bump package version
      #     command: |
      #       branch=$(git log -1 --pretty="%s" | grep -Po '(?<=\/).*' || true;)
      #       semverBump=$(case $branch in
      #         *"feat/"*) echo "minor" ;;
      #         *"bug/"*) echo "patch" ;;
      #         *"hot/"*) echo "patch" ;;
      #         *"patch/"*) echo "patch" ;;
      #         *"hotfix/"*) echo "patch" ;;
      #         *) echo false ;;
      #       esac)
      #       if [ $semverBump != false ]
      #       then
      #         npm version --no-git-tag-version $semverBump || true
      #         DATE=`date +%Y.%m`
      #         VERSION=$(jq -r .version package.json)
      #         sed -i "/version/c\  \"version\": \"${VERSION}+$DATE.$CIRCLE_BUILD_NUM\"," package.json
      #         git push origin master
      #         git push --tags
      #         exit 0;
      #       fi
      - add_ssh_keys:
          fingerprints:
            - "b2:79:96:4b:8e:30:e4:b8:c0:5f:de:0c:c0:f8:1b:f5"
      - run:
          name: Setup Git
          command: |
            git config user.email "gabriel.slama@akqa.com"
            git config user.name "Gabriel Slama"
      - run:
          name: Versioning
          command: npm version patch -m "version %s [skip ci]"
      - run:
          name: Push tag & changes to github.com
          command: git push --set-upstream origin ${CIRCLE_BRANCH}

  test:
    executor: node
    steps:
      - checkout
      - <<: *restore_cache
      - <<: *install_node_modules
      - attach_workspace:
          at: ./
      - run:
          name: Check bunlde size
          command: npm run bundlewatch
  zip_and_store:
    executor: node
    steps:
      - checkout
      - <<: *restore_cache
      - <<: *install_node_modules
      - attach_workspace:
          at: ./
      - run:
          name: Compress Artifacts
          command: zip -r myartifact.zip dist
      - store_artifacts:
          path: archive.zip
          destination: archive
  deploy:
    executor: node
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - <<: *restore_cache
      - <<: *install_node_modules
      - run:
          name: install netlify cli
          command: sudo npm install -g --unsafe-perm --silent netlify-cli
      - run:
          name: deploy site to netlify
          command: |
            netlify deploy | awk '/Website Draft URL: /{print $0}' | sed  's/.* \(.*\)/\1/' > ./echo-output
      - run:
          name: Debugtest
          command: cat ./echo-output
      - run:
          name: Write variable
          command: echo 'export MY_ENV_VAR="$(cat ./echo-output)"' >> $BASH_ENV
      - persist_to_workspace:
          root: ./
          paths:
            - echo-output
  run_ligthouse:
    executor: lighthouse-check/default
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Write variable
          command: echo 'export MY_ENV_VAR="https://google.fr"' >> $BASH_ENV
      - run:
          name: "Did it work?"
          command: echo $MY_ENV_VAR
      - run:
          name: "Did it work?"
          command: echo $MY_ENV_VAR2
      - run:
          name: "Did it work?"
          command: echo $MY_ENV_VAR3
      - lighthouse-check/audit:
          urls: $MY_ENV_VAR2

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - install
      - build_and_lint:
          requires:
            - install
      - test:
          context: NuxtNetlify
          requires:
            - build_and_lint
      - deploy:
          context: NuxtNetlify
          requires:
            - test
      # - run_ligthouse:
      #     requires:
      #         - test
      - pa11yci/a11y-audit:
          custom_url_command: |
            if [[ -f ./echo-output ]]; then
              sed -i -e "s#https://demo-circleci.netlify.app#`cat ./echo-output`#g" .pa11yci
            fi
          filters:
            branches:
              ignore: master
          requires:
            - deploy
      - run_ligthouse:
          requires:
            - deploy
      - zip_and_store:
          requires:
            - test
      # - bump_version:
      #     requires:
      #       - build_and_lint
      #     filters:
      #       branches:
      #         only:
      #           - develop
      #           - master
